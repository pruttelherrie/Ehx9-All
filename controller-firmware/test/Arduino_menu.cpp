/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#include <tcMenu.h>
#include "Arduino_menu.h"

// Global variable declarations

const PROGMEM  ConnectorLocalInfo applicationInfo = { "EHX_MIDI", "2a8650f3-5f1f-4038-be5f-c963c80c084e" };

Adafruit_ST7789 gfx(-1, A4, -1);
AdaColorGfxMenuConfig gfxConfig;
AdaFruitGfxMenuRenderer renderer;

// Global Menu Item declarations

const PROGMEM AnalogMenuInfo minfoLFO1Depth = { "Depth", 9, 0xffff, 255, onLFODepthChange, 0, 1, "" };
AnalogMenuItem menuLFO1Depth(&minfoLFO1Depth, 0, NULL);
const PROGMEM AnalogMenuInfo minfoLFO1Speed = { "Speed", 8, 0xffff, 100, onLFO1SpeedChange, 1, 10, "Hz" };
AnalogMenuItem menuLFO1Speed(&minfoLFO1Speed, 0, &menuLFO1Depth);
const char enumStrLFO1Parameter_0[] PROGMEM = "Param1";
const char enumStrLFO1Parameter_1[] PROGMEM = "Param2";
const char enumStrLFO1Parameter_2[] PROGMEM = "Param3";
const char enumStrLFO1Parameter_3[] PROGMEM = "Param4";
const char* const enumStrLFO1Parameter[] PROGMEM  = { enumStrLFO1Parameter_0, enumStrLFO1Parameter_1, enumStrLFO1Parameter_2, enumStrLFO1Parameter_3 };
const PROGMEM EnumMenuInfo minfoLFO1Parameter = { "Parameter", 11, 0xffff, 3, onLFO1ParameterChange, enumStrLFO1Parameter };
EnumMenuItem menuLFO1Parameter(&minfoLFO1Parameter, 0, &menuLFO1Speed);
const PROGMEM BooleanMenuInfo minfoLFO1LFOActive = { "LFO Active", 10, 0xffff, 1, onLFO1Active, NAMING_YES_NO };
BooleanMenuItem menuLFO1LFOActive(&minfoLFO1LFOActive, false, &menuLFO1Parameter);
RENDERING_CALLBACK_NAME_INVOKE(fnLFO1RtCall, backSubItemRenderFn, "LFO1", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoLFO1 = { "LFO1", 7, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackLFO1(fnLFO1RtCall, &menuLFO1LFOActive);
SubMenuItem menuLFO1(&minfoLFO1, &menuBackLFO1, NULL);
const PROGMEM AnalogMenuInfo minfoSettingsNewAnalogItem = { "New AnalogItem", 6, 0xffff, 255, NO_CALLBACK, 0, 1, "" };
AnalogMenuItem menuSettingsNewAnalogItem(&minfoSettingsNewAnalogItem, 0, NULL);
const PROGMEM AnalogMenuInfo minfoSettingsMIDIChannel = { "MIDI channel", 5, 0xffff, 16, onMidiChange, 0, 1, "" };
AnalogMenuItem menuSettingsMIDIChannel(&minfoSettingsMIDIChannel, 0, &menuSettingsNewAnalogItem);
RENDERING_CALLBACK_NAME_INVOKE(fnSettingsRtCall, backSubItemRenderFn, "Settings", -1, NO_CALLBACK)
const PROGMEM SubMenuInfo minfoSettings = { "Settings", 4, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackSettings(fnSettingsRtCall, &menuSettingsMIDIChannel);
SubMenuItem menuSettings(&minfoSettings, &menuBackSettings, &menuLFO1);
const PROGMEM AnyMenuInfo minfoStore = { "Store", 3, 0xffff, 0, onStore };
ActionMenuItem menuStore(&minfoStore, &menuSettings);
RENDERING_CALLBACK_NAME_INVOKE(fnNameRtCall, textItemRenderFn, "Name", -1, onNameChange)
TextMenuItem menuName(fnNameRtCall, 2, 12, &menuStore);
const char enumStrType_0[] PROGMEM = "Item1";
const char enumStrType_1[] PROGMEM = "Item2";
const char enumStrType_2[] PROGMEM = "Item3";
const char enumStrType_3[] PROGMEM = "Item4";
const char enumStrType_4[] PROGMEM = "Item5";
const char enumStrType_5[] PROGMEM = "Item6";
const char enumStrType_6[] PROGMEM = "Item7";
const char enumStrType_7[] PROGMEM = "Item8";
const char enumStrType_8[] PROGMEM = "Item9";
const char enumStrType_9[] PROGMEM = "Item10";
const char enumStrType_10[] PROGMEM = "Item11";
const char* const enumStrType[] PROGMEM  = { enumStrType_0, enumStrType_1, enumStrType_2, enumStrType_3, enumStrType_4, enumStrType_5, enumStrType_6, enumStrType_7, enumStrType_8, enumStrType_9, enumStrType_10 };
const PROGMEM EnumMenuInfo minfoType = { "Type", 1, 0xffff, 10, onTypeChange, enumStrType };
EnumMenuItem menuType(&minfoType, 0, &menuName);

// Set up code

void setupMenu() {
    prepareAdaColorDefaultGfxConfig(&gfxConfig);
    gfx.init(240, 240);
    gfx.setRotation(3);
    renderer.setGraphicsDevice(&gfx, &gfxConfig);
    switches.initialiseInterrupt(internalDigitalIo(), true);
    menuMgr.initForEncoder(&renderer, &menuType, PA10, PC13, PC15);

    // Read only and local only function calls
    menuSettingsNewAnalogItem.setLocalOnly(true);
    menuType.setLocalOnly(true);
    menuStore.setLocalOnly(true);
    menuName.setLocalOnly(true);
    menuSettingsMIDIChannel.setLocalOnly(true);
}

